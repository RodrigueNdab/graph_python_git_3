# subsetting columns



# Imports

```{python}
import pandas as pd
```

# datasets

```{python}
yao = pd.read_csv("/Users/apple/Desktop/graph_courses_python/data/yaounde_data.csv")
yao
```


```{python}
yao[["age", "sex"]]
```


```{python}
yao_subset = yao[["age"]]
yao_subset
```

# practice 


```{python}
yao[["weight_kg", "height_cm"]]
yao_weight_height = yao[["weight_kg", "height_cm"]]
yao_weight_height
```

## excluding columns with drop
```{python}
 yao.drop(columns=["age"])
```

```{python}
yao_subset = yao.drop(columns=["age", "age_category"])
yao_subset

```
## practice

```{python}

 yao_no_education_consultation = yao.drop(columns=["highest_education", "occupation"])
yao_no_education_consultation

```

## using filter to select colums by regex


```{python}
yao.filter(regex="ig")
```


```{python}
yao.filter(regex="^ig") # start with ig 
```
```{python}
yao.filter(regex="result$") # ends with results
```

## practice 


```{python}
yao_is_colums = yao.filter(regex="^is")
yao_is_colums
```

## change columns names with rename


```{python}
yao.rename(columns={"age": "patient_age", "sex": "patient_sex"})
```

## practice

```{python}
yao_age_cat = yao.rename(columns={"age_category": "age_cat"})
yao_age_cat 
```
##  Cleaning messy column names

```{python}
test_df = pd.DataFrame(
    {"good_name": range(3), "bad name": range(3), "bad*@name*2": range(3)}
)
test_df
```

```{python}
test_df.good_name 
test_df.bad name # not accessible
```

```{python}
clean_names = test_df.columns.str.replace(r'[^a-zA-Z0-9]', '_', regex=True)
```


```{python}
test_df.columns = clean_names
test_df
```

## Practice 

```{python}
cleaning_practice = pd.DataFrame(
    {"Aloha": range(3), "Bell Chart": range(3), "Animals@the zoo": range(3)}
)
cleaning_practice
```

```{python}
clean_names = cleaning_practice.columns.str.replace(r'[^a-zA-Z0-9]', '_', regex=True)
```

```{python}
cleaning_practice.columns = clean_names
cleaning_practice
```